from PySide6.QtWidgets import (
    QMainWindow, QTabWidget, QWidget, QVBoxLayout,
    QPushButton, QFileDialog, QLabel, QHBoxLayout, QFrame,
    QTextEdit, QCheckBox
)
from PySide6.QtMultimedia import QMediaPlayer
from PySide6.QtMultimediaWidgets import QVideoWidget
from PySide6.QtCore import Qt, QObject, QEvent, QUrl
from PySide6.QtGui import QMovie
import os, json

class HoverFilter(QObject):
    """–§–∏–ª—å—Ç—Ä —Å–æ–±—ã—Ç–∏–π –¥–ª—è –Ω–∞–≤–µ–¥–µ–Ω–∏—è –º—ã—à–∏"""
    def __init__(self, parent, name):
        super().__init__(parent)
        self.parent = parent
        self.name = name

    def eventFilter(self, obj, event):
        if event.type() == QEvent.Enter:
            self.parent.show_tweak_info(self.name)
        return False

class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()

        self.setWindowTitle("PyRustSettings")
        self.setGeometry(200, 200, 1000, 600)

        # –ó–∞–≥—Ä—É–∂–∞–µ–º tweaks.json
        self.tweaks_info = self.load_tweaks_json()

        # –ì–ª–∞–≤–Ω–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ (–≤–∫–ª–∞–¥–∫–∏ + –ø—Ä–µ–≤—å—é)
        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        layout = QHBoxLayout(central_widget)

        # –í–∫–ª–∞–¥–∫–∏
        self.tabs = QTabWidget()
        self.tabs.setTabPosition(QTabWidget.North)

        # –î–æ–±–∞–≤–ª—è–µ–º –≤–∫–ª–∞–¥–∫–∏
        self.tabs.addTab(self.create_home_tab(), "–ì–ª–∞–≤–Ω–æ–µ")
        self.tabs.addTab(self.create_tweaks_tab(), "–¢–≤–∏–∫–∏")
        self.tabs.addTab(QWidget(), "–ì—Ä–∞—Ñ–∏–∫–∞")
        self.tabs.addTab(QWidget(), "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è")
        self.tabs.addTab(QWidget(), "–ë–∏–Ω–¥—ã")
        self.tabs.addTab(QWidget(), "–ü—Ä–æ—á–µ–µ")

        # –ü–∞–Ω–µ–ª—å –ø—Ä–µ–≤—å—é —Å–ø—Ä–∞–≤–∞
        self.preview_panel = self.create_preview_panel()

        # –ö–æ–º–ø–æ–Ω–æ–≤–∫–∞
        layout.addWidget(self.tabs, 3)
        layout.addWidget(self.preview_panel, 2)

    def load_tweaks_json(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –æ–ø–∏—Å–∞–Ω–∏–π —Ç–≤–∏–∫–æ–≤ –∏–∑ core/tweaks.json"""
        json_path = os.path.join("core", "tweaks.json")
        if os.path.exists(json_path):
            with open(json_path, "r", encoding="utf-8") as f:
                return json.load(f)
        return {}

    def create_home_tab(self):
        """–ì–ª–∞–≤–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞"""
        tab = QWidget()
        layout = QVBoxLayout(tab)

        self.path_label = QLabel("–ü–∞–ø–∫–∞ —Å cfg –Ω–µ –≤—ã–±—Ä–∞–Ω–∞")
        layout.addWidget(self.path_label)

        self.load_button = QPushButton("–°—á–∏—Ç–∞—Ç—å –ø–∞–ø–∫—É —Å –∫–æ–Ω—Ñ–∏–≥–∞–º–∏")
        self.load_button.clicked.connect(self.load_cfg_folder)
        layout.addWidget(self.load_button)

        layout.addStretch()
        return tab

    def create_tweaks_tab(self):
        """–í–∫–ª–∞–¥–∫–∞ –¢–≤–∏–∫–∏"""
        tab = QWidget()
        layout = QVBoxLayout(tab)

        self.checkboxes = {}

        for tweak, data in self.tweaks_info.items():
            cb = QCheckBox(tweak)
            cb.installEventFilter(HoverFilter(self, tweak))
            layout.addWidget(cb)
            self.checkboxes[tweak] = cb

        layout.addStretch()
        return tab

    def create_preview_panel(self):
        """–°–ø—Ä–∞–≤–∞ –ø–∞–Ω–µ–ª—å –ø—Ä–µ–≤—å—é"""
        frame = QFrame()
        frame.setFrameShape(QFrame.StyledPanel)
        layout = QVBoxLayout(frame)

        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –º–µ–¥–∏–∞ (GIF –∏–ª–∏ –≤–∏–¥–µ–æ)
        self.media_container = QWidget()
        self.media_layout = QVBoxLayout(self.media_container)
        self.media_layout.setContentsMargins(0, 0, 0, 0)

        # QLabel –¥–ª—è GIF
        self.preview_gif_label = QLabel()
        self.preview_gif_label.setAlignment(Qt.AlignCenter)
        self.preview_gif_label.setFixedSize(300, 300)
        self.preview_gif_label.hide()  # —Å–∫—Ä—ã—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

        # QVideoWidget –¥–ª—è MP4
        self.video_widget = QVideoWidget()
        self.video_widget.setFixedSize(360, 220)
        self.video_widget.hide()  # —Å–∫—Ä—ã—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

        self.media_layout.addWidget(self.preview_gif_label)
        self.media_layout.addWidget(self.video_widget)

        # –¢–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
        self.preview_text = QTextEdit()
        self.preview_text.setReadOnly(True)
        self.preview_text.setPlaceholderText("–û–ø–∏—Å–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")

        layout.addWidget(self.media_container)
        layout.addWidget(self.preview_text)

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–ª–µ–µ—Ä –æ–¥–∏–Ω —Ä–∞–∑
        self.media_player = QMediaPlayer()
        self.media_player.setVideoOutput(self.video_widget)

        return frame

    def show_tweak_info(self, tweak_name):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–≤—å—é –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ —á–µ–∫–±–æ–∫—Å"""
        tweak_data = self.tweaks_info.get(tweak_name, {})
        description = tweak_data.get("description", "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")
        media_file = tweak_data.get("preview", "")  # ‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π "preview", –∞ –Ω–µ "gif"!

        self.preview_text.setPlainText(description)

        # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å—ë
        if hasattr(self, '_current_movie') and self._current_movie:
            self._current_movie.stop()
            self._current_movie = None

        self.media_player.stop()
        self.preview_gif_label.hide()
        self.video_widget.hide()

        if not media_file:
            self.preview_gif_label.setText("–ü—Ä–µ–≤—å—é –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ")
            self.preview_gif_label.show()
            return

        media_path = os.path.join("assets", "graphics", media_file)
        if not os.path.exists(media_path):
            self.preview_gif_label.setText(f"[–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω:\n{media_path}]")
            self.preview_gif_label.show()
            return

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é
        ext = os.path.splitext(media_file)[1].lower()

        if ext in ('.gif', '.apng'):
            # GIF / APNG ‚Äî —á–µ—Ä–µ–∑ QMovie
            movie = QMovie(media_path)

            def on_first_frame():
                rect = movie.frameRect()
                if rect.isValid() and not rect.isEmpty():
                    size = rect.size()
                    max_size = 300
                    if size.width() > max_size or size.height() > max_size:
                        size.scale(max_size, max_size, Qt.KeepAspectRatio)
                    self.preview_gif_label.setFixedSize(size)
                movie.frameChanged.disconnect(on_first_frame)

            movie.frameChanged.connect(on_first_frame)
            self.preview_gif_label.setMovie(movie)
            self.preview_gif_label.show()
            movie.start()
            self._current_movie = movie

        elif ext in ('.mp4', '.webm', '.avi', '.mov'):
            # –í–∏–¥–µ–æ ‚Äî —á–µ—Ä–µ–∑ QMediaPlayer —Å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º –ø–æ–≤—Ç–æ—Ä–æ–º
            url = QUrl.fromLocalFile(os.path.abspath(media_path))
            self.media_player.setSource(url)
            self.media_player.setLoops(QMediaPlayer.Loops.Infinite)  # üîÅ –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π –ø–æ–≤—Ç–æ—Ä
            self.video_widget.show()
            self.media_player.play()

        else:
            self.preview_gif_label.setText("–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç")
            self.preview_gif_label.show()

    def load_cfg_folder(self):
        """–í—ã–±–æ—Ä –ø–∞–ø–∫–∏ —Å cfg"""
        folder = QFileDialog.getExistingDirectory(self, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É Rust")
        if folder:
            cfg_path = os.path.join(folder, "cfg")
            if os.path.exists(cfg_path):
                self.path_label.setText(f"–ù–∞–π–¥–µ–Ω–∞ –ø–∞–ø–∫–∞ cfg: {cfg_path}")
                # TODO: –∑–¥–µ—Å—å –ø–æ–¥–∫–ª—é—á–∏–º —á—Ç–µ–Ω–∏–µ client.cfg –∏ keys.cfg
            else:
                self.path_label.setText("–í –ø–∞–ø–∫–µ Rust –Ω–µ –Ω–∞–π–¥–µ–Ω–æ cfg")
